package com.greedy.api.secion03.valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/* 데이터 검증 (validation)
 * 클라이언트의 데이타는 조작이 쉽고, 모든 데이터가 정상적인 방식으로 들어오지 않을 가능성 도 있기 때문에 
 * Client side 뿐만 아니라 Server side에서도 데이터 유효성 검사를 할 필요가 있다. 
 * => spring boot stater validation 활용 
 * 
 * */
@RestController
@RequestMapping("/valid")
public class ValidTestController {

	
	/*  조회기능 exception 발생 시 처리 방법*/
	@GetMapping("/users/{userNo}")
	public ResponseEntity<?> findUserByNo() throws UserNotFoundException{
		
		boolean check = true;
		if(check) {
			throw new UserNotFoundException("회원 정보를 찾을 수 없습니다. ");
		}
		
		return ResponseEntity.ok().build();
	}
	
	@PostMapping("/users")
	public ResponseEntity<?> registUser(@RequestBody UserDTO user){
		
		/* 유효성 검사 모듈 사용 */
		
		return null;
	}
	
}
